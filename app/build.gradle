plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
//apply plugin: 'bugly'
//
//bugly {
//    // 注册时分配的 App ID
//    appId = 'f435b56729'
//    // 注册时分配的 App Key
//    appKey = 'eaac3388-8df2-4795-ab05-5c79d56d2786'
//}

android {
    namespace 'com.xpf.mediaplayer'
    useLibrary 'org.apache.http.legacy'
    compileSdk rootProject.ext.android.compileSdk
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    signingConfigs {
        debug {
            storeFile file("android_media_player.jks")
            storePassword 'android_media_player'
            keyAlias 'android_media_player'
            keyPassword 'android_media_player'
        }
        release {
            storeFile file("android_media_player.jks")
            storePassword 'android_media_player'
            keyAlias 'android_media_player'
            keyPassword 'android_media_player'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = getApkName()
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        aidl true
        buildConfig true
    }

    lint {
        abortOnError false
    }
}

def getApkFullPath() {
    return rootDir.getAbsolutePath() + "/app/build/outputs/apk/release/" + getApkName()
}

def getApkName() {
    return "MediaPlayer-V${android.defaultConfig.versionName}-${releaseTime()}.apk"
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'org.xutils:xutils:3.8.8'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.cjj.materialrefeshlayout:library:1.3.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.28'
    implementation 'cn.jzvd:jiaozivideoplayer:6.4.1'
    implementation 'com.xsir:PgyerAndroidAppUpdate:0.9'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
    implementation('pub.devrel:easypermissions:2.0.0', {
        exclude group: 'com.android.support'
    })
    implementation project(':vitamio')
}

def readProperties(key) {
    File file = rootProject.file('local.properties')
    if (file.exists()) {
        InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
        Properties properties = new Properties()
        properties.load(inputStream)

        if (properties.containsKey(key)) {
            return properties.getProperty(key)
        }
    }
}

static def getUpdateDescription() {
    return '1.代码优化;\n2.fixed bugs;\n3.发布V1.0.4;'
}

tasks.register('uploadApk') {
    doLast {
        def command = "curl -F \"file=@${getApkFullPath()}\" -F \"uKey=${readProperties('pgyer.userKey')}\" -F \"_api_key=${readProperties('pgyer.apiKey')}\" -F \"buildUpdateDescription=${getUpdateDescription()}\" https://www.pgyer.com/apiv2/app/upload"
        println "command:" + command

        try {
            exec {
                ExecSpec execSpec ->
                    executable 'bash'
                    args '-c', command
            }
            println "uploadApk success~"
        } catch (Exception e) {
            e.printStackTrace()
        }
    }
}

uploadApk.dependsOn("assembleRelease")

tasks.register('installApk') {
    doLast {
        def command = "adb install -r ${getApkFullPath()}"
        println "command:" + command

        try {
            exec {
                ExecSpec execSpec ->
                    executable 'bash'
                    args '-c', command
            }
            println "installApk success"
        } catch (Exception e) {
            e.printStackTrace()
        }
    }
}

tasks.register('launchApp') {
    doLast {
        def command = "adb shell am start ${android.defaultConfig.applicationId}/.MainActivity"
        println "command:" + command

        try {
            exec {
                ExecSpec execSpec ->
                    executable 'bash'
                    args '-c', command
            }
            println "installApk success"
        } catch (Exception e) {
            e.printStackTrace()
        }
    }
}

/**
 * 打包命令：
 * ./gradlew assembleRelease
 * 打包上传 APK:
 * ./gradlew :app:uploadApk
 * 安装 APK:
 * ./gradlew :app:installApk
 * 启动 APK:
 * ./gradlew :app:launchApp
 */